version: "3.6"

services:
  traefik:
    image: traefik:v2.9
    command:
      - "--providers.file.filename=/traefik.yml"
    networks:
      - traefik-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "./letsencrypt:/letsencrypt"
      - type: bind
        source: ./traefik.yml
        target: /traefik.yml
        read_only: true
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.http.middlewares.cors.headers.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.cors.headers.Access-Control-Allow-Methods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors.headers.Access-Control-Allow-Headers=Content-Type"

  web:
    image: nginx
    volumes:
      - ./web:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`robanohashi.org`)"
    networks:
      - traefik-net

  api:
    image: martingrzzler/robanohashi-api
    environment:
      - REDIS_URL=redis:6379
      - REDIS_PASSWORD=
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.robanohashi.org`)"
    depends_on:
      - redis
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

    volumes:
      - type: bind
        source: ./serviceAccountKey.json
        target: /serviceAccountKey.json
        read_only: true
    networks:
      - traefik-net

  redis:
    image: redis/redis-stack:latest
    volumes:
      - ./data:/data
    networks:
      - traefik-net

networks:
  traefik-net:
