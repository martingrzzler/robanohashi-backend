// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/kanji/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subject"
                ],
                "summary": "get a kanji",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Kanji ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Kanji"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/meaning_mnemonic": {
            "post": {
                "security": [
                    {
                        "firebase": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meaning-Mnemonic"
                ],
                "summary": "create a meaning mnemonic for a kanji or vocabulary",
                "parameters": [
                    {
                        "description": "Meaning mnemonic",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMeaningMnemonic"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.MeaningMnemonic"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateMeaningMnemonic": {
            "type": "object",
            "required": [
                "object",
                "subject_id",
                "text"
            ],
            "properties": {
                "object": {
                    "$ref": "#/definitions/model.Object"
                },
                "subject_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "dto.Kanji": {
            "type": "object",
            "properties": {
                "amalgamation_subjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SubjectPreview"
                    }
                },
                "characters": {
                    "type": "string"
                },
                "component_subjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SubjectPreview"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "meanings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Meaning"
                    }
                },
                "object": {
                    "$ref": "#/definitions/model.Object"
                },
                "reading_mnemonic": {
                    "type": "string"
                },
                "readings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KanjiReading"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "visually_similar_subjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SubjectPreview"
                    }
                }
            }
        },
        "dto.MeaningMnemonic": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "subject_id": {
                    "description": "must be string ensure that TAG for the index works as expected",
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "voting_count": {
                    "type": "integer"
                }
            }
        },
        "dto.SubjectPreview": {
            "type": "object",
            "properties": {
                "character_image": {
                    "type": "string"
                },
                "characters": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "meanings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "object": {
                    "$ref": "#/definitions/model.Object"
                },
                "readings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "model.KanjiReading": {
            "type": "object",
            "properties": {
                "primary": {
                    "type": "boolean"
                },
                "reading": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Meaning": {
            "type": "object",
            "properties": {
                "meaning": {
                    "type": "string"
                },
                "primary": {
                    "type": "boolean"
                }
            }
        },
        "model.Object": {
            "type": "string",
            "enum": [
                "kanji",
                "radical",
                "vocabulary"
            ],
            "x-enum-varnames": [
                "ObjectKanji",
                "ObjectRadical",
                "ObjectVocabulary"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "robanohashi.org",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Roba no hashi API",
	Description:      "Query Kanji, Vocabulary, and Radicals with Mnemonics",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
