definitions:
  dto.CreateMeaningMnemonic:
    properties:
      object:
        $ref: '#/definitions/model.Object'
      subject_id:
        type: integer
      text:
        type: string
    required:
    - object
    - subject_id
    - text
    type: object
  dto.CreatedResponse:
    properties:
      id:
        type: string
    type: object
  dto.DeleteMeaningMnemonic:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.Kanji:
    properties:
      amalgamation_subjects:
        items:
          $ref: '#/definitions/dto.SubjectPreview'
        type: array
      characters:
        type: string
      component_subjects:
        items:
          $ref: '#/definitions/dto.SubjectPreview'
        type: array
      id:
        type: integer
      meanings:
        items:
          $ref: '#/definitions/model.Meaning'
        type: array
      object:
        $ref: '#/definitions/model.Object'
      reading_mnemonic:
        type: string
      readings:
        items:
          $ref: '#/definitions/model.KanjiReading'
        type: array
      slug:
        type: string
      source:
        type: string
      visually_similar_subjects:
        items:
          $ref: '#/definitions/dto.SubjectPreview'
        type: array
    type: object
  dto.List-dto_MeaningMnemonicWithUserInfo:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.MeaningMnemonicWithUserInfo'
        type: array
      total_count:
        type: integer
    type: object
  dto.List-dto_SubjectPreview:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.SubjectPreview'
        type: array
      total_count:
        type: integer
    type: object
  dto.MeaningMnemonicWithUserInfo:
    properties:
      created_at:
        type: integer
      downvoted:
        type: boolean
      favorite:
        type: boolean
      id:
        type: string
      me:
        type: boolean
      subject: {}
      text:
        type: string
      updated_at:
        type: integer
      upvoted:
        type: boolean
      user_id:
        type: string
      voting_count:
        type: integer
    type: object
  dto.Radical:
    properties:
      amalgamation_subjects:
        items:
          $ref: '#/definitions/dto.SubjectPreview'
        type: array
      character_image:
        type: string
      characters:
        type: string
      id:
        type: integer
      meaning_mnemonic:
        type: string
      meanings:
        items:
          $ref: '#/definitions/model.Meaning'
        type: array
      object:
        $ref: '#/definitions/model.Object'
      slug:
        type: string
      source:
        type: string
    type: object
  dto.StatusResponse:
    properties:
      status:
        type: string
    type: object
  dto.SubjectPreview:
    properties:
      character_image:
        type: string
      characters:
        type: string
      id:
        type: integer
      meanings:
        items:
          type: string
        type: array
      object:
        $ref: '#/definitions/model.Object'
      readings:
        items:
          type: string
        type: array
      slug:
        type: string
      source:
        type: string
    type: object
  dto.ToggleFavoriteMeaningMnemonic:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  dto.ToggleSubjectBookmark:
    properties:
      object:
        $ref: '#/definitions/model.Object'
      subject_id:
        type: integer
    required:
    - object
    - subject_id
    type: object
  dto.UpdateMeaningMnemonic:
    properties:
      id:
        type: string
      text:
        type: string
    required:
    - id
    - text
    type: object
  dto.Vocabulary:
    properties:
      characters:
        type: string
      component_subjects:
        items:
          $ref: '#/definitions/dto.SubjectPreview'
        type: array
      context_sentences:
        items:
          $ref: '#/definitions/model.ContextSentence'
        type: array
      id:
        type: integer
      meanings:
        items:
          $ref: '#/definitions/model.Meaning'
        type: array
      object:
        $ref: '#/definitions/model.Object'
      reading_mnemonic:
        type: string
      readings:
        items:
          $ref: '#/definitions/model.VocabularyReading'
        type: array
      slug:
        type: string
      source:
        type: string
    type: object
  dto.VoteMeaningMnemonic:
    properties:
      meaning_mnemonic_id:
        type: string
      vote:
        type: integer
    required:
    - meaning_mnemonic_id
    - vote
    type: object
  model.ContextSentence:
    properties:
      en:
        type: string
      hiragana:
        type: string
      ja:
        type: string
    type: object
  model.KanjiReading:
    properties:
      primary:
        type: boolean
      reading:
        type: string
      type:
        type: string
    type: object
  model.Meaning:
    properties:
      meaning:
        type: string
      primary:
        type: boolean
    type: object
  model.Object:
    enum:
    - kanji
    - radical
    - vocabulary
    type: string
    x-enum-varnames:
    - ObjectKanji
    - ObjectRadical
    - ObjectVocabulary
  model.VocabularyReading:
    properties:
      primary:
        type: boolean
      reading:
        type: string
      romaji:
        type: string
    type: object
host: api.robanohashi.org
info:
  contact: {}
  description: Query Kanji, Vocabulary, and Radicals with Mnemonics
  title: Roba no hashi API
  version: 1.0.0
paths:
  /kanji/{id}:
    get:
      parameters:
      - description: Kanji ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Kanji'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: get a kanji
      tags:
      - Subject
  /meaning_mnemonic:
    delete:
      parameters:
      - description: mnemonic id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteMeaningMnemonic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: delete a meaning mnemonic
      tags:
      - Meaning-Mnemonic
    post:
      parameters:
      - description: Meaning mnemonic
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateMeaningMnemonic'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: create a meaning mnemonic for a kanji or vocabulary
      tags:
      - Meaning-Mnemonic
    put:
      parameters:
      - description: mnemonic id + text
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateMeaningMnemonic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: update the meaning mnemonic text
      tags:
      - Meaning-Mnemonic
  /meaning_mnemonic/favorites:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.List-dto_MeaningMnemonicWithUserInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: get all meaning mnemonics marked as favorite
      tags:
      - Meaning-Mnemonic
  /meaning_mnemonic/toggle_favorite:
    post:
      parameters:
      - description: mnemonic id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ToggleFavoriteMeaningMnemonic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: toggle favorite on a meaning mnemonic
      tags:
      - Meaning-Mnemonic
  /meaning_mnemonic/vote:
    post:
      parameters:
      - description: vote can be 1 or -1
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.VoteMeaningMnemonic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: vote on a meaning mnemonic
      tags:
      - Meaning-Mnemonic
  /radical/{id}:
    get:
      parameters:
      - description: Radical ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Radical'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: get a radical
      tags:
      - Subject
  /search:
    get:
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.List-dto_SubjectPreview'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: search for subjects
      tags:
      - Search
  /subject/{id}/meaning_mnemonics:
    get:
      parameters:
      - description: Subject ID vocabulary or kanji
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.List-dto_MeaningMnemonicWithUserInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: get meaning mnemonics optionally with user data if authenticated
      tags:
      - Subject
  /subject/bookmark:
    post:
      parameters:
      - description: toggle subject bookmark
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ToggleSubjectBookmark'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: toggle bookmark for a subject
      tags:
      - Subject
  /user/bookmarks:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.List-dto_SubjectPreview'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: get user bookmarked subjects
      tags:
      - Subject
  /user/meaning_mnemonics:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.List-dto_MeaningMnemonicWithUserInfo'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - Bearer: []
      summary: get all meaning mnemonics created by the user
      tags:
      - Meaning-Mnemonic
  /vocabulary/{id}:
    get:
      parameters:
      - description: Vocabulary ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Vocabulary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: get a vocabulary
      tags:
      - Subject
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
